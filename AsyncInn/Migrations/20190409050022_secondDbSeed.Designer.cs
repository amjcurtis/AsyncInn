// <auto-generated />
using AsyncInn.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncInn.Migrations
{
    [DbContext(typeof(AsyncInnDbContext))]
    [Migration("20190409050022_secondDbSeed")]
    partial class secondDbSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncInn.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "A/C"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Toaster"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Coffee maker"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Ocean view"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Hot tub"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<int>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.HasKey("ID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "London",
                            Name = "The Windsor Hotel",
                            Phone = 1234567890,
                            State = "Londonshire",
                            StreetAddress = "21B Baker St."
                        },
                        new
                        {
                            ID = 2,
                            City = "Victoria",
                            Name = "The Empress Hotel",
                            Phone = 1234567890,
                            State = "British Columbia",
                            StreetAddress = "1400 Commercial Ave."
                        },
                        new
                        {
                            ID = 3,
                            City = "Mt. Vernon",
                            Name = "Best Western",
                            Phone = 1234567890,
                            State = "WA",
                            StreetAddress = "12 Division St."
                        },
                        new
                        {
                            ID = 4,
                            City = "Bellingham",
                            Name = "4 Point Sheraton",
                            Phone = 1234567890,
                            State = "WA",
                            StreetAddress = "1240 Lakeway Dr."
                        },
                        new
                        {
                            ID = 5,
                            City = "Seattle",
                            Name = "Super 8",
                            Phone = 1234567890,
                            State = "WA",
                            StreetAddress = "15 Olive Way"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID");

                    b.Property<int>("RoomNumber");

                    b.Property<bool>("PetFriendly");

                    b.Property<decimal>("Rate");

                    b.Property<int>("RoomID");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");
                });

            modelBuilder.Entity("AsyncInn.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 0,
                            Name = "Bachelor Pad"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 0,
                            Name = "Penthouse"
                        },
                        new
                        {
                            ID = 3,
                            Layout = 1,
                            Name = "Lone Ranger"
                        },
                        new
                        {
                            ID = 4,
                            Layout = 1,
                            Name = "Honeymoon Suite"
                        },
                        new
                        {
                            ID = 5,
                            Layout = 2,
                            Name = "Presidential Suite"
                        },
                        new
                        {
                            ID = 6,
                            Layout = 2,
                            Name = "Cardinal's Suite"
                        });
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.Property<int>("AmenitiesID");

                    b.Property<int>("RoomID");

                    b.HasKey("AmenitiesID", "RoomID");

                    b.HasIndex("AmenitiesID")
                        .IsUnique();

                    b.HasIndex("RoomID");

                    b.ToTable("RoomAmenities");
                });

            modelBuilder.Entity("AsyncInn.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncInn.Models.Hotel", "Hotel")
                        .WithMany("HotelRoom")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("HotelRoom")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AsyncInn.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncInn.Models.Amenities", "Amenities")
                        .WithOne("RoomAmenities")
                        .HasForeignKey("AsyncInn.Models.RoomAmenities", "AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AsyncInn.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
